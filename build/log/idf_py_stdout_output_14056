[1/12] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\dell\lcd_project\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/dell/lcd_project/build/bootloader/bootloader.bin"
Bootloader binary size 0x6580 bytes. 0xa80 bytes (9%) free.
[2/12] No install step for 'bootloader'
[3/12] Completed 'bootloader'
[4/12] Building C object esp-idf/lcd/CMakeFiles/__idf_lcd.dir/src/lcd.c.obj
[5/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[6/12] Linking C static library esp-idf\lcd\liblcd.a
[7/12] Linking C static library esp-idf\main\libmain.a
[8/12] Generating ld/sections.ld
[9/12] Linking CXX executable lcd_project.elf
[10/12] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/dell/lcd_project/build/lcd_project.bin
[11/12] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\dell\lcd_project\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/dell/lcd_project/build/partition_table/partition-table.bin C:/Users/dell/lcd_project/build/lcd_project.bin"
lcd_project.bin binary size 0x2c3f0 bytes. Smallest app partition is 0x100000 bytes. 0xd3c10 bytes (83%) free.
[11/12] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.4.1\components\esptool_py && C:\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.4.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/dell/lcd_project/build -P C:/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM17 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 lcd_project.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port COM17
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 08:f9:e0:ba:79:8c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003cfff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 25984 bytes to 16377...
Writing at 0x00001000... (100 %)
Wrote 25984 bytes (16377 compressed) at 0x00001000 in 0.5 seconds (effective 405.1 kbit/s)...
Hash of data verified.
Compressed 181232 bytes to 98347...
Writing at 0x00010000... (14 %)
Writing at 0x0001c59e... (28 %)
Writing at 0x00021fc1... (42 %)
Writing at 0x00027de0... (57 %)
Writing at 0x0002f2ca... (71 %)
Writing at 0x00035d28... (85 %)
Writing at 0x0003c3ca... (100 %)
Wrote 181232 bytes (98347 compressed) at 0x00010000 in 2.5 seconds (effective 591.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 941.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
